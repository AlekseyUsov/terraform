---
- name: Prepare OpenShift Hosts
  hosts: all
  remote_user: ec2-user
  become: true

  vars_prompt:
  - name: "RHN_USERNAME"
    prompt: "Enter your RHN username"
  - name: "RHN_PASSWORD"
    prompt: "Enter your RHN password"

  tasks:
  - name: Set hostnames
    hostname:
      name: '{{ inventory_hostname }}'

  - copy:
      content: '{{ inventory_hostname }}'
      dest: /etc/hostname

  - name: Set /etc/hosts
    lineinfile:
      path: /etc/hosts
      line: "{{ ansible_eth0['ipv4']['address'] }} {{ inventory_hostname }}"

  - name: Register systems and attach them to the pool
    redhat_subscription:
      username: '{{ RHN_USERNAME }}'
      password: '{{ RHN_PASSWORD }}'
      pool: '8a85f99c655dbbe60165674786440080'

  - name: Enable repositories
    command: 'subscription-manager repos --enable=rhel-7-server-rpms \
              --enable=rhel-7-server-extras-rpms \
              --enable=rhel-7-server-ose-3.11-rpms \
              --enable=rhel-7-fast-datapath-rpms \
              --enable=rhel-7-server-ansible-2.6-rpms'

  - name: Install packages
    yum:
      name: '{{item}}'
    with_items:
      - git
      - wget
      - net-tools
      - bridge-utils
      - iptables-services
      - bind-utils
      - bash-completion
      - kexec-tools
      - sos
      - psacct
      - docker
      - ansible
      - httpd-tools
      - java-1.8.0-openjdk-headless
      - skopeo

  - name: Update systems
    yum:
      name: '*'
      state: latest

  - name: Configure Docker storage on masters
    copy:
      src: files/docker-storage-setup-masters
      dest: /etc/sysconfig/docker-storage-setup
    when: "'masters' in group_names"

  - name: Configure Docker storage on nodes
    copy:
      src: files/docker-storage-setup-nodes
      dest: /etc/sysconfig/docker-storage-setup
    when: "'nodes' in group_names"

  - name: Setup Docker storage
    command: docker-storage-setup

  - name: Start and enable Docker
    service:
      name: docker
      state: started
      enabled: true

  - name: Setup SSH access from master-1
    shell: ssh-keygen -q -N "" -f /root/.ssh/id_rsa && cat /root/.ssh/id_rsa.pub
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'
    register: master_ssh_public_key

  - copy:
      content: "{{ hostvars['openshift-master-1.demo.li9.com']['master_ssh_public_key'].stdout }}"
      dest: /root/.ssh/authorized_keys
      
  - name: Collect masters' fingerprints
    shell: for i in $(seq 1 3); do ssh-keyscan openshift-master-$i.demo.li9.com >> /root/.ssh/known_hosts; done
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'

  - name: Collect nodes' fingerprints
    shell: for i in $(seq 1 4); do ssh-keyscan openshift-node-$i.demo.li9.com >> /root/.ssh/known_hosts; done
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'

  - name: Collect load balancer's fingerprint
    shell: ssh-keyscan openshift.demo.li9.com >> /root/.ssh/known_hosts
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'

  - name: Download OpenShift installer
    git:
      repo: https://github.com/openshift/openshift-ansible
      dest: /root/openshift-ansible
      version: release-3.11
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'

  - name: Copy OpenShift cluster inventory
    copy:
      src: files/openshift_inventory
      dest: /etc/ansible/openshift_inventory
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'

  - name: Creating SDN network plugin directories
    file:
      state: directory
      recurse: true
      dest: /etc/cni/net.d
      owner: root
      group: root
    when: inventory_hostname != 'openshift.demo.li9.com'

  - name: Initializing SDN network plugin
    copy:
      src: files/80-openshift-network.conf
      dest: /etc/cni/net.d/80-openshift-network.conf
      owner: root
      group: root
    when: inventory_hostname != 'openshift.demo.li9.com'

  - name: Install OpenShift
    command: ansible-playbook -i /etc/ansible/openshift_inventory playbooks/deploy_cluster.yml -f 10 -e oreg_auth_user='{{ RHN_USERNAME }}' -e oreg_auth_password='{{ RHN_PASSWORD }}'
    args:
      chdir: /root/openshift-ansible
    when: inventory_hostname == 'openshift-master-1.demo.li9.com'
...
